version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8000:8000"  # Remove if using Nginx
    env_file:
      - .env
    restart: unless-stopped
    depends_on:
      - db
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    networks:
      - app-network

  db:
    image: postgres:15-alpine
    env_file:
      - .env
    volumes:
      - ./data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    networks:
      - app-network

  test:
    build:
      context: .
      dockerfile: Dockerfile.test
    env_file:
      - .env
    volumes:
      - ./backend:/backend
    depends_on:
      - db
    command: pytest -v
    networks:
      - app-network

  # nginx:  # Optional: Reverse proxy for production
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
  #   depends_on:
  #     - backend
  #     - frontend
  #   restart: unless-stopped
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 256M
  #       reservations:
  #         memory: 128M
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge